*vimplus.txt*					vimplus help

	     __		       __
     __   __/_/___ ___	____  / /_  _______
     \ \ / / / __ `__ \/ __ \/ / / / / ___/
      \ V / / / / / / / /_/ / / /_/ (__  )
       \_/_/_/ /_/ /_/ ,___/_/\____/____/
		    /_/

=============================================================================================================
CONTENTS				    *vimplus-contents*

    Plugin About .......................... |vimplus-plugin-about|
    Useful Commands ....................... |vimplus-useful-commands|
    Cursor Movement ....................... |vimplus-cursor-movement|
    Text Editing .......................... |vimplus-text-editing|
    External Command ...................... |vimplus-external-command|
    Macro Recording ....................... |vimplus-macro-recording|
    Further Information ................... |vimplus-further-information|

=============================================================================================================
Plugin About				    *vimplus-plugin-about*

    快捷键		  | 说明
    ----------------------|---------------------------------------
    `<space>`		  | 显示所有<Leader>引导的快捷键
    `Ctrl+s`		  | 保存内容
    `Ctrl+a`		  | 选中所有
    `Ctrl+z`		  | 展开折叠
    `Ctrl+c`		  | 文本复制
    `Ctrl+v`		  | 文本粘贴
    `Ctrl+Up`		  | 增加窗口高度
    `Ctrl+Down`		  | 减少窗口高度
    `Ctrl+Right`	  | 增加窗口宽度
    `Ctrl+Left`		  | 减少窗口宽度
    `F2`		  | 代码折叠与展开
    `:SSave`		  | 保存当前状态为某个session
    `:SDelete`		  | 删除某个session
    `F3`		  | 打开/关闭代码资源管理器
    `F4`		  | 打开/关闭函数列表
    `]h`		  | 跳转到下一处修改的位置
    `[h`		  | 跳转到上一处修改的位置
    `:CD`		  | 打开/关闭diff 缓存
    `:CP`		  | 打开/关闭diff preview
    `Alt+=`		  | 接受智能补全填充（插入模式）
    `Alt+,`		  | 智能补全上一条目（插入模式）
    `Alt+.`		  | 智能补全下一条目（插入模式）
    `Alt+-`		  | 清除智能补全填充（插入模式）
    `F5`		  | 开始或继续调试
    `Shift+F5`		  | 停止调试
    `Ctrl+F5`		  | 暂停调试
    `F6`		  | 重新开始调试
    `Shift+F6`		  | 显示反汇编
    `F7`		  | 调用堆栈上移
    `Shift+F7`		  | 调用堆栈下移
    `F8`		  | 显示/隐藏断点窗口
    `Shift+F8`		  | 跳转到当前文件中的下一个断点
    `Ctrl+F8`		  | 跳转到前文件中的上一个断点
    `F9`		  | 为当前行添加断点
    `Shift+F9`		  | 为当前行添加条件断点
    `Ctrl+F9`		  | 为光标下的函数添加断点
    `F10`		  | 跨步
    `Shift+F10`		  | 运行到光标处
    `Ctrl+F10`		  | 程序计数器重置为当前行
    `F11`		  | 步入
    `Shift+F11`		  | 步出

=============================================================================================================
Useful Commands				    *vimplus-useful-commands*

    快捷键		  | 说明
    ----------------------|-----------------------------------------------------
    `:s/p1/p2/g`	  | 替换当前行的p1为p2
    `:%s/p1/p2/g`	  | 替换当前文件中的p1为p2
    `:%s/<p1>/p2/g`	  | 替换当前文件中的p1单词为p2,例','替换为换行:%s/,/\r/g
    `:%s/p1/p2/gc`	  | 替换当前文件中的p1为p2，并且每处询问你是否替换
    `:10,20s/p1/p2/g`	  | 将第10到20行中所有p1替换为p2
    `:%s/1\\2\/3/123/g`     | 将“1\2/3” 替换为 “123”（特殊字符使用反斜杠标注）
    `:%s/\r//g`		  | 删除 DOS 换行符 ^M
    `:g/^\s*$/d`	  | 删除空行
    `:g/test/d`		  | 删除所有包含 test 的行
    `:v/test/d`		  | 删除所有不包含 test 的行
    `:%s/^/test/`	  | 在行首加入特定字符(也可以用宏录制来添加)
    `:%s/$/test/`	  | 在行尾加入特定字符(也可以用宏录制来添加)
    `:sort`		  | 排序
    `:g/^\(.\+\)$\n\1/d`    | 去除重复行(先排序)
    `:%s/^.\{10\}//`	  | 删除每行前10个字符
    `:%s/.\{10\}$//`	  | 删除每行尾10个字符
    `:%s/\s\+$//g`	  | 删除每行尾空格字符
    `:retab`		  | 将tab转化为空格
    `:marks`		  | 查看使用的标记
    `:mark ``A`		  | 标记A，使用'A 跳转到A处，[a-z]:文件内 [A-Z]:全局
    `:delmarks ``A`	  | 删除标记 A
    `:w ``!sudo` `tee` `%`        | 无权限时强制修改


=============================================================================================================
Cursor Movement				    *vimplus-cursor-movement*

    快捷键		  | 说明
    ----------------------|------------------------------------------
    `h,j,k,l`		  | 上下左右移动
    `H,M,L`		  | 调到屏幕上中下
    `0,$`		  | 光标移动到行首/行尾
    `b,w,e`		  | 跳到上/下一个单词开头/尾部
    `%`			  | 在配对符间移动, 可用于()、{}、[]
    `gg`		  | 到文件首
    `G`			  | 到文件尾
    `[[`		  | 跳转到函数开头
    `]]`		  | 跳转到函数结尾
    `gd`		  | 跳转到局部变量定义
    `gf`		  | 跳转到头文件


=============================================================================================================
Text Editing				    *vimplus-text-editing*

    快捷键		  | 说明
    ----------------------|-------------------------------------------------------------
    `r`			  | 替换当前字符
    `R`			  | 进入替换模式，直至 ESC 离开
    `s`			  | 替换字符（删除光标处字符，并进入插入模式，前可接数量）
    `S`			  | 替换行（删除当前行，并进入插入模式，前可接数量）
    `cc`		  | 改写当前行（删除当前行并进入插入模式），同 S
    `cw`		  | 改写光标开始处的当前单词
    `ciw`		  | 改写光标所处的单词
    `caw`		  | 改写光标所处的单词，并且包括前后空格（如果有的话）
    `ct,`		  | 改写到逗号
    `c0`		  | 改写到行首
    `c^`		  | 改写到行首（第一个非零字符）
    `c$`		  | 改写到行末
    `C`			  | 改写到行末（同 c$）
    `ci"`		  | 改写双引号中的内容
    `ci'`		  | 改写单引号中的内容
    `ci)`		  | 改写小括号中的内容
    `ci]`		  | 改写中括号中内容
    `ci}`		  | 改写大括号中内容
    `cit`		  | 改写 xml tag 中的内容
    `cis`		  | 改写当前句子
    `ciB`		  | 改写'{}'中的内容
    `c2w`		  | 改写下两个单词
    `ct(`		  | 改写到小括号前
    `x`			  | 删除当前字符，前面可以接数字，3x代表删除三个字符
    `X`			  | 向前删除字符
    `dd`		  | 删除当前行
    `d0`		  | 删除到行首
    `d^`		  | 删除到行首（第一个非零字符）
    `d$`		  | 删除到行末
    `D`			  | 删除到行末（同 d$）
    `dw`		  | 删除当前单词
    `dt,`		  | 删除到逗号
    `diw`		  | 删除光标所处的单词
    `daw`		  | 删除光标所处的单词，并包含前后空格（如果有的话）
    `di"`		  | 删除双引号中的内容
    `di'`		  | 删除单引号中的内容
    `di)`		  | 删除小括号中的内容
    `di]`		  | 删除中括号中内容
    `di}`		  | 删除大括号中内容
    `diB`		  | 删除'{}'中的内容
    `dit`		  | 删除 xml tag 中的内容
    `dis`		  | 删除当前句子
    `d2w`		  | 删除下两个单词
    `dt(`		  | 删除到小括号前
    `dgg`		  | 删除到文件头部
    `dG`		  | 删除到文件尾部
    `d}`		  | 删除下一段
    `d{`		  | 删除上一段
    `CTRL-6`		  | 上一个buffer 和当前buffer 相互切换
    `CTRL-i`		  | 下一次操作
    `CTRL-o`		  | 上一次操作
    `u`			  | 撤销  =   CTRL-z
    `U`			  | 撤销整行操作
    `CTRL-R`		  | 撤销上一次 u 命令
    `J`			  | 连接若干行
    `gJ`		  | 连接若干行，删除空白字符
    `.`			  | 重复上一次操作
    `~`			  | 交换大小写
    `g~iw`		  | 替换当前单词的大小写
    `gUiw`		  | 将单词转成大写
    `guiw`		  | 将当前单词转成小写
    `guu`		  | 全行转为小写
    `gUU`		  | 全行转为大写
    `gg=G`		  | 缩进整个文件
    `=a{`		  | 缩进光标所在代码块
    `=i{`		  | 缩进光标所在代码块，不缩进"{"
    `<<`		  | 减少缩进
    `>>`		  | 增加缩进
    `==`		  | 自动缩进
    `CTRL-A`		  | 增加数字
    `CTRL-X`		  | 减少数字
    `p`			  | 粘贴到光标后
    `P`			  | 粘贴到光标前
    `v`			  | 开始标记
    `y`			  | 复制标记内容
    `V`			  | 开始按行标记
    `CTRL-V` `->` `ALT-V`       | 开始列标记
    `y$`		  | 复制当前位置到本行结束的内容
    `yy`		  | 复制当前行
    `Y`			  | 复制当前行，同 yy
    `yt,`		  | 复制到逗号
    `yiw`		  | 复制当前单词
    `"+y`		  | 复制当前选中到系统剪切板
    `3yy`		  | 复制光标下三行内容
    `v0`		  | 选中当前位置到行首
    `v$`		  | 选中当前位置到行末
    `vt,`		  | 选中到逗号
    `viw`		  | 选中当前单词
    `vi)`		  | 选中小括号内的东西
    `vi]`		  | 选中中括号内的东西
    `viB`		  | 选中'{}'中的内容
    `vis`		  | 选中句子中的东西
    `gv`		  | 重新选择上一次选中的文字
    `"?yy`		  | 复制当前行到寄存器 ? ，问号代表 0-9 的寄存器名称
    `"?p`		  | 将寄存器 ? 的内容粘贴到光标后
    `"?P`		  | 将寄存器 ? 的内容粘贴到光标前
    `:registers`	  | 显示所有寄存器内容
    `:[range]y`		  | 复制范围，比如 :20,30y 是复制20到30行，:10y 是复制第十行
    `:[range]d`		  | 删除范围，比如 :20,30d 是删除20到30行，:10d 是删除第十行
    `ddp`		  | 交换两行内容：先删除当前行复制到寄存器，并粘贴


=============================================================================================================
External Command			    *vimplus-external-command*

    快捷键		  | 说明
    ----------------------|----------------------------------------------------
    `!`			  | 告诉vim正在执行一个过滤操作
    `!5Gsort<Enter>`	  | 使用外部sort命令对1-5行文本排序
    `!!`		  | 对当前行执行过滤命令
    `!!date<Enter>`	  | 用"date"的输出代替当前行
    `execute system("sudo chrt -r -a -p 50 ".getpid())` | 修改vim进程为实时进程


=============================================================================================================
Macro Recording				    *vimplus-macro-recording*

    快捷键		  | 说明
    ----------------------|------------------------------------------
    `qa`		  | 开始录制名字为a的宏
    `q`			  | 结束录制宏
    `@a`		  | 播放名字为a的宏
    `100@a`		  | 播放名字为a的宏100次
    `:normal@a`		  | 播放名字为a的宏直到自动结束


=============================================================================================================
Further Information			    *vimplus-further-information*

    快捷键			    | 说明
    --------------------------------|------------------------------------------------------------------------
    vimdiff file1 file2		    | 显示文件差异
    vim -b filename		    | 打开二进制文件 -> :%!xxd(转换16进制编辑) -> :%!xxd -r(转换回二进制)
    vim -R filename		    | 以只读方式打开（阅读模式）
    vim --startuptime startup.log   | 记录vim 启动时间
    sed -i "s/原字符串/新字符串/g" ``grep "原字符串" -rl 所在目录`` | 借助linux 外部命令实现某个目录下的全局替换
    sed -i "s/https:\/\/libs.baidu.com/https:\/\/cdn.static.runoob.com\/libs/g" ``grep -rl "libs.baidu.com" ./``


=============================================================================================================


vim:tw=78:ts=8:noet:ft=help:norl:
